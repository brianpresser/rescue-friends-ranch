[{"/Users/bp/Documents/code/rescue-friends-ranch/src/index.js":"1","/Users/bp/Documents/code/rescue-friends-ranch/src/App.js":"2","/Users/bp/Documents/code/rescue-friends-ranch/src/reportWebVitals.js":"3","/Users/bp/Documents/code/rescue-friends-ranch/src/topNav.js":"4","/Users/bp/Documents/code/rescue-friends-ranch/src/listItem.jsx":"5","/Users/bp/Documents/code/rescue-friends-ranch/src/List.jsx":"6","/Users/bp/Documents/code/rescue-friends-ranch/src/FilterModal.jsx":"7"},{"size":500,"mtime":1610598421478,"results":"8","hashOfConfig":"9"},{"size":607,"mtime":1611352155928,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610598421479,"results":"11","hashOfConfig":"9"},{"size":17353,"mtime":1611361277549,"results":"12","hashOfConfig":"9"},{"size":836,"mtime":1611286903506,"results":"13","hashOfConfig":"9"},{"size":10952,"mtime":1611362442647,"results":"14","hashOfConfig":"9"},{"size":4905,"mtime":1611297208112,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"a35yzr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bp/Documents/code/rescue-friends-ranch/src/index.js",[],["32","33"],"/Users/bp/Documents/code/rescue-friends-ranch/src/App.js",[],"/Users/bp/Documents/code/rescue-friends-ranch/src/reportWebVitals.js",[],"/Users/bp/Documents/code/rescue-friends-ranch/src/topNav.js",["34","35","36","37","38","39","40","41"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FilterListOutlinedIcon from '@material-ui/icons/FilterListOutlined';\nimport { Mail } from '@material-ui/icons';\nimport DogLogo from '../src/assets/images/dog-bowl.png'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\n/////////////////////////////\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Filter Options</DialogTitle>\n      <DialogContent dividers>\n        {/* <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup> */}\n   <div className={classes.root}>\n     <div>\n      <HomeWorkIcon />\n      <LocalHospitalIcon style={{marginLeft: '375px'}}/>\n    </div>\n   <div style={{float: 'left', marginTop: '15px'}}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\"></FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n      </div>\n      <div style={{merginLeft: '10px', float: 'left',  marginTop: '15px'}}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\"></FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n      </div>\n\n      <div style={{merginLeft: '10px', float: 'right', marginTop: '15px'}}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\"></FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n      </div>\n    <div>\n\n   <div style={{merginLeft: '10px', float: 'left', marginTop: '42px'}}>\n     <div>\n       <DriveEtaIcon />\n     </div>\n\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\"></FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n      </div>\n\n      <div style={{merginLeft: '10px', float: 'left', marginTop: '68px'}}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\"></FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n      </div>\n      <div style={{merginLeft: '10px', float: 'right', marginTop: '42px'}}>\n      <div>\n       <AccessTimeIcon />\n     </div>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\"></FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n      </FormControl>\n      </div>\n      </div>\n    </div>\n\n\n\n\n    \n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Apply\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\n/////////////////\n\n\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Account Info</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Sign Out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" style={{backgroundColor: '#2e2e2e', height: '95px'}}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            {/* <MenuIcon /> */}\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n          </Typography>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" style={{marginTop: '15px'}}>\n          {<img alt='' src={DogLogo} style={{height: '35px', width: '35px'}}></img>}\n          </IconButton>\n          <div className={classes.search} style={{marginLeft: '50px', marginTop: '20px'}}>\n            <div className={classes.searchIcon} >\n              <SearchIcon style={{marginTop: '0px'}}/>\n            </div>\n            <InputBase\n              style={{width: '380px'}}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" style={{marginTop: '15px'}}>\n              {/* <Badge badgeContent={4} color=\"secondary\"> */}\n                <AddCircleOutlineIcon style={{height: '35px', width: '35px'}} />\n              {/* </Badge> */}\n            </IconButton>\n            <IconButton \n              // aria-label='show 4 new mails'\n              color='inherit' \n              style={{marginTop: '15px'}}\n              button\n              divider\n              // aria-haspopup='true'\n              // aria-controls='ringtone-menu'\n              // aria-label='phone ringtone'\n              onClick={handleClickListItem}\n              role='listitem'\n            >\n              {/* <Badge badgeContent={4} color=\"secondary\"> */}\n                <FilterListOutlinedIcon style={{height: '35px', width: '35px'}}/>\n              {/* </Badge> */}\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" style={{marginTop: '15px'}}>\n              {/* <Badge badgeContent={17} color=\"secondary\"> */}\n                <BookmarkBorderOutlinedIcon style={{height: '35px', width: '35px'}}/>\n              {/* </Badge> */}\n            </IconButton>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" style={{marginTop: '15px'}}>\n              <Badge badgeContent={4} color=\"secondary\">\n                <Mail style={{height: '35px', width: '35px'}}/>\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n              style={{marginTop: '15px'}}\n            >\n              <AccountCircleOutlinedIcon style={{height: '35px', width: '35px'}}/>\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div style={{marignTop: '300px'}}>\n      {renderMobileMenu}\n      </div>\n      <div style={{marignTop: '300px'}}>\n        {renderMenu}\n      </div>\n      <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper,\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n    </div>\n    \n  );\n}","/Users/bp/Documents/code/rescue-friends-ranch/src/listItem.jsx",[],"/Users/bp/Documents/code/rescue-friends-ranch/src/List.jsx",["42","43","44"],"/Users/bp/Documents/code/rescue-friends-ranch/src/FilterModal.jsx",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":11,"column":8,"nodeType":"52","messageId":"53","endLine":11,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":28,"column":8,"nodeType":"52","messageId":"53","endLine":28,"endColumn":18},{"ruleId":"50","severity":1,"message":"55","line":29,"column":8,"nodeType":"52","messageId":"53","endLine":29,"endColumn":13},{"ruleId":"50","severity":1,"message":"56","line":108,"column":7,"nodeType":"52","messageId":"53","endLine":108,"endColumn":14},{"ruleId":"50","severity":1,"message":"57","line":131,"column":21,"nodeType":"52","messageId":"53","endLine":131,"endColumn":33},{"ruleId":"50","severity":1,"message":"58","line":132,"column":20,"nodeType":"52","messageId":"53","endLine":132,"endColumn":31},{"ruleId":"50","severity":1,"message":"59","line":159,"column":17,"nodeType":"52","messageId":"53","endLine":159,"endColumn":25},{"ruleId":"50","severity":1,"message":"60","line":166,"column":9,"nodeType":"52","messageId":"53","endLine":166,"endColumn":14},{"ruleId":"50","severity":1,"message":"61","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":18},{"ruleId":"50","severity":1,"message":"62","line":11,"column":8,"nodeType":"52","messageId":"53","endLine":11,"endColumn":16},{"ruleId":"50","severity":1,"message":"63","line":12,"column":8,"nodeType":"52","messageId":"53","endLine":12,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":157,"column":9,"nodeType":"66","endLine":165,"endColumn":10},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'options' is assigned a value but never used.","'setFullWidth' is assigned a value but never used.","'setMaxWidth' is assigned a value but never used.","'setState' is assigned a value but never used.","'error' is assigned a value but never used.","'Typography' is defined but never used.","'DogThree' is defined but never used.","'BlackDog' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]